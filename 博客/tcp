/*
 * 
 * 　　┏┓　　　┏┓+ +
 * 　┏┛┻━━━┛┻┓ + +
 * 　┃　　　　　　　┃ 　
 * 　┃　　　━　　　┃ ++ + + +
 *  ████━████ ┃+
 * 　┃　　　　　　　┃ +
 * 　┃　　　┻　　　┃
 * 　┃　　　　　　　┃ + +
 * 　┗━┓　　　┏━┛
 * 　　　┃　　　┃　　　　　　　　　　　
 * 　　　┃　　　┃ + + + +
 * 　　　┃　　　┃
 * 　　　┃　　　┃ +  神兽保佑
 * 　　　┃　　　┃    代码无bug　　
 * 　　　┃　　　┃　　+　　　　　　　　　
 * 　　　┃　 　　┗━━━┓ + +
 * 　　　┃ 　　　　　　　┣┓
 * 　　　┃ 　　　　　　　┏┛
 * 　　　┗┓┓┏━┳┓┏┛ + + + +
 * 　　　　┃┫┫　┃┫┫
 * 　　　　┗┻┛　┗┻┛+ + + +
 * 
 * 
 * @Author: hhhhack
 * @Date: 2020-12-19 18:17:38
 * @LastEditTime: 2020-12-23 17:21:04
 * @LastEditors: hhhhack
 * @Description: 
 * @FilePath: /code/leetcode/博客/tcp
 * @
 */

1.tcp特性：面向连接的，双工，面向数据流的协议

2.tcp建立连接
三次握手，保证两端的连接都建立成功，
例1：客户端发起连接，服务端确认，假设服务端掉线，或者网络延迟，没有收到响应，这时候服务端认为连接建立，会很浪费资源
例2：客户端没有建立连接，但是有留存在网络的syn包，服务端收到后认为连接建立，发送ack包

3.tcp断开连接
四次挥手，保证连接双方都释放连接
需要四次挥手是tcp的半关闭特性导致的，tcp是全双工连接，每一端需要单独关闭，当一端发送完数据，发起连接断开的时候可能对端还有数据待处理，这时候值关闭一端的连接，需要等到对端数据处理完也发起关闭


timewait状态
tcp关闭后会有一个2MSL的等待时间，确保主动发起关闭端的最后一个ack到对端，如果没到，可以收到对端重新发送的FIN包

tcp流量控制
交互数据流
块数据流
